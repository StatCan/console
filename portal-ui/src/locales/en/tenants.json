{
  "accessKey": "Access Key",
  "accessToTenantCanBe": "Access to the tenant can be controlled via an external Identity Manager.",
  "activateProduct": "Activate Product",
  "activeDir": "Active Directory",
  "activeDirColon": "Active Directory:",
  "add": "add",
  "addAdditionalUsers": "Add additional users",
  "addCACertificate": "Add CA Certificate",
  "addCert": "Add Certificate",
  "additionalConfigs": "Additional Configurations",
  "addMore": "Add More",
  "addNamespaceConfirmation": "Are you sure you want to add a namespace called <2>{{namespace}}</2>?",
  "addPool": "Add Pool",
  "address": "Address",
  "addUser": "Add User",
  "advancedMode": "Advanced Mode",
  "age": "Age",
  "appRole": "App Role",
  "appRoleID": "AppRole ID",
  "appRoleSecret": "AppRole Secret",
  "attachLicense": "Attach License",
  "autoCertMinio": "AutoCert: MinIO Operator will generate all TLS certificates automatically",
  "aws": "AWS",
  "back": "Back",
  "backToTenantsList": "Back To Tenants List",
  "basicConfigurations": "Basic configurations for tenant management",
  "bucket": "Bucket",
  "builtIn": "Built-in",
  "ca": "CA",
  "callbackURL": "Callback URL",
  "cancel": "Cancel",
  "capacity": "Capacity",
  "capacityColon": "Capacity:",
  "cert": "Cert",
  "checkAdvancedModeFor": " Check 'Advanced Mode' for additional configuration options, such as configuring an Identity Provider, Encryption at rest, and customized TLS/SSL Certificates.",
  "claimName": "Claim Name",
  "clear": "Clear",
  "clientEmail": "Client Email",
  "clientID": "Client ID",
  "cluster": "Cluster",
  "clustersColon": "Clusters:",
  "clusterTabs": "cluster-tabs",
  "commercialLicense": "Commercial License",
  "configurationURL": "Configuration URL",
  "configure": "Configure",
  "configureHowPods": "Configure how pods will be assigned to nodes",
  "configureStorageClasses": "Configure Storage Classes & Storage size for Log Search and Prometheus add-ons",
  "consoleColon": "Console:",
  "create": "Create",
  "createNamespace": "Create Namespace",
  "createNewNamespace": "Create new namespace",
  "createNewTenant": "Create New Tenant",
  "createTenant": "Create Tenant",
  "credentials": "Credentials",
  "customCACert": "Custom CA Root certificate verification",
  "customCert": "Custom certificates: Allow user to provide your own certificates",
  "customCertificates": "Custom Certificates",
  "defaultAffinity": "Default (Pod Anti-afinnity)",
  "delete": "Delete",
  "deletePod": "Delete Pod",
  "deletePodConfirmation": "To continue please type <1>{{selectedPod}}</1> in the box.",
  "deleteTenant": "Delete Tenant",
  "deleteTenantConfirmation": "To continue please type <1>{{selectedTenant}}</1> in the box.",
  "destinationBucket": "Destination Bucket",
  "details": "Details",
  "disabled": "Disabled",
  "domain": "Domain",
  "driveCapacity": "Drive Capacity",
  "drivesOffline": "Drives Offline",
  "drivesOnline": "Drives Online",
  "drivesPerServer": "Drives per Server",
  "ecParity": "EC Parity",
  "editYAML": "Edit YAML",
  "enableAutoCert": "Enable AutoCert",
  "enabled": "Enabled",
  "enableServerSideEncrypt": "Enable Server Side Encryption",
  "enableTLS": "Enable TLS",
  "enableTLSfor": "Enable TLS for the tenant, this is required for Encryption Configuration",
  "encryptCertificates": "Encryption Service Certificates",
  "encryption": "Encryption",
  "encryptionColon": "Encryption:",
  "encryptionOptions": "Encryption Options",
  "endpoint": "Endpoint",
  "endpointColon": "Endpoint:",
  "endpointExample": "E.g. {{link}}",
  "engine": "Engine",
  "enterImageRegistryPassword": "Enter image registry password",
  "enterImageRegistryUsername": "Enter image registry username",
  "erasureCodeConfig": "Erasure Code Configuration",
  "erasureCodeParity": "Erasure Code Parity",
  "errorLoadingPods": "Error loading pods",
  "events": "Events",
  "eventType": "Event Type",
  "expandTenant": "Expand Tenant",
  "expiryColon": "Expiry:",
  "expiryDate": "Expiry Date",
  "exposeConsoleService": "Expose Console Service",
  "exposeMinioService": "Expose MiniO Service",
  "exposeService": "Expose Services",
  "features": "Features",
  "fieldCannotBeEmpty": "Field cannot be empty",
  "filter": "Filter",
  "formatPattern": "Format must be of form: 'minio/minio:VERSION'",
  "formatPatternKes": "Format must be of form: 'minio/kes:VERSION'",
  "formatPatternLogSearch": "Format must be of form: 'minio/logsearchapi:VERSION'",
  "formatPatternPostgres": "Format must be of form: 'library/postgres:VERSION'",
  "formatPatternPrometheus": "Format must be of form: 'minio/prometheus:VERSION'",
  "gcp": "GCP",
  "gemalto": "Gemalto",
  "groupNameAttribute": "Group Name Attribute",
  "groupSearchBaseDN": "Group Search Base DN",
  "groupSearchFilter": "Group Search Filter",
  "health": "Health",
  "highlightLine": "Highlight Line",
  "howWouldYouLikeEncrypt": "How would you like to encrypt the information at rest.",
  "identityProvider": "Identity Provider",
  "incorrectTenantName": "Tenant name is not correct",
  "instanceCapacity": "Instance Capacity",
  "instancesColon": "Instances:",
  "interNodeCertDesc": "The internode certificates will be generated and managed by MinIO Operator",
  "invalidNamespaceErr": "Please enter a valid namespace",
  "kesImage": "KES Image",
  "kesImageExample": "E.g. {{image}}",
  "key": "Key",
  "kmsKey": "KMS Key",
  "labels": "Labels",
  "lastSeen": "Last Seen",
  "ldapServerAddress": "LDAP Server Address",
  "leaveAdvancedModeFor": "Leave 'Advanced Mode' unchecked to use the secure default settings for the tenant.",
  "license": "License",
  "listOfUserDNs": "List of user DNs (Distinguished Names) to be Tenant Administrators",
  "localCluster": "Local Cluster",
  "logs": "Logs",
  "logsColon": "Logs:",
  "logSearchImage": "Log Search API's Image",
  "logSearchImageExample": "E.g. {{image}}",
  "logSearchStorageClass": "Log Search Storage Class",
  "lookupBindDN": "Lookup Bind DN",
  "lookupBindPassword": "Lookup Bind Password",
  "manageInterNodeCert": "Manage Inter-Node Certificates Automatically",
  "management": " > Management",
  "manageTenant": "Manage Tenant",
  "memoryPer": "Memory per Node",
  "memoryPerNode": "Memory per Node [Gi]",
  "message": "Message",
  "metrics": "Metrics",
  "minioCACertificates": "MinIO CA Certificates",
  "minioCertificates": "MinIO Certificates",
  "minioColon": "MinIO:",
  "minioImage": "MinIO Image",
  "minioImageExample": "E.g. {{image}}",
  "miniosImage": "MinIO's Image",
  "minioSupportsMultiple": "MinIO supports multiple configurations for Pod Afinnity",
  "minioTLSColon": "MinIO TLS:",
  "minKeyLength": "Keys must be at least length 8",
  "minLabelKeyPair": "You need to add at least one label key-pair",
  "minMemorySizeErr": "Memory size must be greater than 2Gi",
  "minNumDriveErr": "There must be at least one drive",
  "minSize": "Value needs to be 0 or greater",
  "minVolumeSize": "Volume size must be present and be greater than 0",
  "minVolumeSizeErr": "Volume size must be greater than 1Gi and less than {{num}}",
  "monitoringColon": "Monitoring:",
  "mutualTLSAuth": "Mutual TLS authentication",
  "mutualTLSAuthOptional": "Mutual TLS authentication (optional)",
  "name": "Name",
  "nameErr": "Name only can contain lowercase letters, numbers and '-'. Min. Length: 3",
  "namespace": "Namespace",
  "namespaceValidationErr": "Error validating if namespace already has tenants",
  "nameTenant": "Name Tenant",
  "newTenantNamePrompt": "How would you like to name this new tenant?",
  "next": "Next",
  "no": "No",
  "node": "Node",
  "nodeSelector": "Node Selector",
  "none": "None",
  "noPoolsFound": "No Pools found",
  "numberOfDrivesPer": "Number of Drives per Server",
  "numberOfServerFailures": "Number of server failures to tolerate",
  "numberOfServers": "Number of Servers",
  "numOfDrives": "# of Drives",
  "numOfInstances": "# of Instances",
  "numOfNodes": "Number of Nodes",
  "numOfPools": "# of Pools",
  "ok": "Ok",
  "oneTenantPerNamespaceErr": "You can only create one tenant per namespace",
  "openID": "OpenID",
  "openIDColon": "OpenID:",
  "organization": "Organization",
  "overrideLogSearch": "Override Log Search defaults",
  "overridePrometheusdefaults": "Override Prometheus defaults",
  "password": "Password",
  "pingSeconds": "Ping (Seconds)",
  "pleaseEnterMinioImage": "Please enter the MinIO docker image to use",
  "pleaseEnterMinioImg": "Please enter the MinIO image from dockerhub to use. If blank, then latest build will be used.",
  "pleaseSelectDesired": "Please select the desired capacity",
  "pleaseSelectParity": "Please select the desired parity. This setting will change the max usable capacity in the cluster",
  "podAffinity": "Pod Affinity",
  "podIP": "Pod IP",
  "pods": "Pods",
  "pools": "Pools",
  "postgresImage": "Log Search Postgres's Image",
  "postgresImageExample": "E.g. {{image}}",
  "prefix": "Prefix",
  "previewConfig": "Preview Configuration",
  "privateKey": "Private Key",
  "privateKeyID": "Private Key ID",
  "projectID": "Project ID",
  "prometheusImage": "Prometheus Image",
  "prometheusImageExample": "E.g. {{image}}",
  "prometheusStorageClass": "Prometheus Storage Class",
  "protocol": "Protocol",
  "randomizeCredentials": "Randomize Credentials",
  "rawCapacity": "Raw Capacity",
  "reason": "Reason",
  "refresh": "Refresh",
  "refreshList": "Refresh List",
  "refreshTenantList": "Refresh tenant list",
  "region": "Region",
  "registeredCapacity": "Registered Capacity",
  "remoteCluster": "Remote Cluster",
  "remove": "Remove",
  "requester": "Requester",
  "resourceAllocation": "Resource Allocation",
  "restart": "Restart",
  "restarts": "Restarts",
  "retry": "Retry (Seconds)",
  "review": "Review",
  "reviewDetails": "Review the details of the new tenant",
  "save": "Save",
  "saveAndRestart": "Save and Restart",
  "saveAndRestartConfirm": "Are you sure you want to save the changes and restart the service?",
  "scopes": "Scopes",
  "searchTenants": "Search Tenants",
  "secretID": "Secret ID",
  "secretKey": "Secret Key",
  "security": "Security",
  "serverInsecure": "Server Insecure",
  "servers": "Servers",
  "setCustomImgRegistry": "Set Custom Image Registry",
  "setUpdateImageRegistry": "Set/Update Image Registry",
  "simpleTable": "simple table",
  "skipTLSverification": "Skip TLS Verification",
  "sourceBucket": "Source Bucket",
  "startTLSconnection": "Start TLS connection to AD/LDAP server",
  "state": "State",
  "stateColon": "State:",
  "status": "Status",
  "storage": "Storage",
  "storageClass": "Storage Class",
  "storageSize": "Storage Size [Gi]",
  "subscriptionPlan": "Subscription Plan",
  "summary": "Summary",
  "tenant": "Tenant",
  "tenantDeleted": "Tenant Deleted",
  "tenantName": "Tenant Name",
  "tenantNameErr": "Tenant name is not correct",
  "tenants": "Tenants",
  "tenantSize": "Tenant Size",
  "tenantSpecification": "Tenant Specification",
  "token": "Token",
  "totalCapacity": "Total Capacity",
  "totalNumberOfVolumes": "Total Number of Volumes",
  "totalSize": "Total Size",
  "type": "Type",
  "unit": "Unit",
  "updateMinioVersion": "Update MinIO Version",
  "url": "URL",
  "usableCapacity": "Usable Capacity",
  "useCustomImage": "Use custom image",
  "userDNSearchBase": "User DN Search Base DN",
  "userDNSearchFilter": "User DN Search Filter",
  "username": "Username",
  "usernameFormat": "Username Format",
  "usernameSearchFilter": "Username Search Filter",
  "value": "value",
  "vault": "Vault",
  "verified": "verified",
  "volumePerServer": "Volumes per Server",
  "volumesColon": "Volumes:",
  "volumeSize": "Volume Size (Gi)",
  "warningAllTraffic": "Warning: All traffic with Active Directory will be unencrypted",
  "whetherTenantService": "Whether the tenant's services should request an external IP.",
  "withPodAntiAffinity": "With Pod Anti-Affinity",
  "writeQuorum": "Write Quorum",
  "yaml": "YAML",
  "yes": "Yes"
}
