{
     "accessKey": "Clé d'accès",
     "accessToTenantCanBe": "L'accès au locataire peut être contrôlé via un gestionnaire d'identité externe.",
     "activateProduct": "Activer le produit",
     "activeDir": "Active Directory",
     "activeDirColon": "Active Directory :",
     "add": "ajouter",
     "addAdditionalUsers": "Ajouter des utilisateurs supplémentaires",
     "addCACertificate": "Ajouter un certificat CA",
     "addCert": "Ajouter un certificat",
     "additionalConfigs": "Configurations supplémentaires",
     "addMore": "Ajouter plus",
     "addNamespaceConfirmation": "Êtes-vous sûr de vouloir ajouter un espace de nom appelé <2>{{espace de nom}}</2> ?",
     "addPool": "Ajouter un pool",
     "address": "Adresse",
     "addUser": "Ajouter un utilisateur",
     "advancedMode": "Mode avancé",
     "age": "Age",
     "appRole": "Rôle d'application",
     "appRoleID": "ID de l'application",
     "appRoleSecret": "Secret de l'AppRole",
     "attachLicense": "Attacher la licence",
     "autoCertMinio": "AutoCert : L'opérateur MinIO génère automatiquement tous les certificats TLS.",
     "aws": "AWS",
     "back": "Retour",
     "backToTenantsList": "Retour à la liste des locataires",
     "basicConfigurations": "Configurations de base pour la gestion des locataires",
     "bucket": "Bucket",
     "builtIn": "Built-in",
     "ca": "CA",
     "callbackURL": "URL de rappel",
     "cancel": "Annuler",
     "capacity": "Capacité",
     "capacityColon": "Capacité :",
     "cert": "Cert",
     "checkAdvancedModeFor": " Cochez la case "Mode avancé" pour des options de configuration supplémentaires, telles que la configuration d'un fournisseur d'identité, le cryptage au repos et les certificats TLS/SSL personnalisés.",
     "claimName": "Nom de la réclamation",
     "clear": "Clair",
     "clientEmail": "Email du client",
     "clientID": "ID du client",
     "cluster": "Cluster",
     "clustersColon": "Clusters :",
     "clusterTabs": "cluster-tabs",
     "commercialLicense": "Licence commerciale",
     "configurationURL": "URL de configuration",
     "configure": "Configurer",
     "configureHowPods": "Configurer la manière dont les pods seront affectés aux nœuds",
     "configureStorageClasses": "Configurer les classes de stockage et la taille du stockage pour les modules complémentaires Log Search et Prometheus.",
     "consoleColon": "Console :",
     "create": "Créer",
     "createNamespace": "Créer un espace de nom",
     "createNewNamespace": "Créer un nouvel espace de noms",
     "createNewTenant": "Créer un nouveau locataire",
     "createTenant": "Créer un locataire",
     "credentials": "Informations d'identification",
     "customCACert": "Vérification du certificat racine de l'AC personnalisé",
     "customCert": "Certificats personnalisés : Permettre à l'utilisateur de fournir ses propres certificats",
     "customCertificates": "Certificats personnalisés",
     "defaultAffinity": "Par défaut (Pod Anti-afinnity)",
     "delete": "Supprimer",
     "deletePod": "Supprimer le Pod",
     "deletePodConfirmation": "Pour continuer, veuillez taper <1>{{selectedPod}}</1> dans la case.",
     "deleteTenant": "Supprimer le locataire",
     "deleteTenantConfirmation": "Pour continuer, veuillez taper <1>{{selectedTenant}}</1> dans la case.",
     "destinationBucket": "Seau de destination",
     "details": "Détails",
     "disabled": "Désactivé",
     "domain": "Domaine",
     "driveCapacity": "Capacité du disque",
     "drivesOffline": "Disques hors ligne",
     "drivesOnline": "Disques en ligne",
     "drivesPerServer": "Lecteurs par serveur",
     "ecParity": "Parité EC",
     "editYAML": "Modifier YAML",
     "enableAutoCert": "Activer AutoCert",
     "enabled": "Activé",
     "enableServerSideEncrypt": "Activer le chiffrement côté serveur",
     "enableTLS": "Activer TLS",
     "enableTLSfor": "Activer TLS pour le locataire, ceci est nécessaire pour la configuration du cryptage.",
     "encryptCertificates": "Certificats de service de cryptage",
     "encryption": "Cryptage",
     "encryptionColon": "Cryptage :",
     "encryptionOptions": "Options de cryptage",
     "endpoint": "Point de terminaison",
     "endpointColon": "Point de terminaison :",
     "endpointExample": "Par exemple, {{lien}}",
     "engine": "Moteur",
     "enterImageRegistryPassword": "Entrez le mot de passe du registre des images",
     "enterImageRegistryUsername": "Entrez le nom d'utilisateur du registre des images",
     "erasureCodeConfig": "Configuration du code d'effacement",
     "erasureCodeParity": "Parité du code d'effacement",
     "errorLoadingPods": "Erreur de chargement des pods",
     "events": "Événements",
     "eventType": "Type d'événement",
     "expandTenant": "Expand Tenant",
     "expiryColon": "Expiration :",
     "expiryDate": "Date d'expiration",
     "exposeConsoleService": "Expose Console Service",
     "exposeMinioService": "Exposer le service MiniO",
     "exposeService": "Expose Services",
     "features": "Caractéristiques",
     "fieldCannotBeEmpty": "Le champ ne peut pas être vide",
     "filter": "Filtre",
     "formatPattern": "Le format doit être de la forme : 'minio/minio:VERSION'.",
     "formatPatternKes": "Le format doit être de la forme : minio/kes:VERSION",
     "formatPatternLogSearch": "Le format doit être de la forme : Le format doit être du type : 'minio/logsearchapi:VERSION'.",
     "formatPatternPostgres": "Le format doit être de la forme : Le format doit être de la forme : 'library/postgres:VERSION'.",
     "formatPatternPrometheus": "Le format doit être du type 'minio/prometheus:VERSION'.",
     "gcp": "GCP",
     "gemalto": "Gemalto",
     "groupNameAttribute": "Attribut de nom de groupe",
     "groupSearchBaseDN": "DN de base de la recherche de groupe",
     "groupSearchFilter": "Filtre de recherche de groupe",
     "health": "Santé",
     "highlightLine": "Ligne de mise en évidence",
     "howWouldYouLikeEncrypt": "Comment voulez-vous crypter les informations au repos.",
     "identityProvider": "Fournisseur d'identité",
     "incorrectTenantName": "Le nom du locataire n'est pas correct",
     "instanceCapacity": "Capacité de l'instance",
     "instancesColon": "Instances :",
     "interNodeCertDesc": "Les certificats internodaux seront générés et gérés par MinIO Operator",
     "invalidNamespaceErr": "Veuillez entrer un espace de nom valide",
     "kesImage": "Image KES",
     "kesImageExample": "Par exemple : {{image}}",
     "key": "Clé",
     "kmsKey": "Clé KMS",
     "labels": "Étiquettes",
     "lastSeen": "Dernière vue",
     "ldapServerAddress": "Adresse du serveur LDAP",
     "leaveAdvancedModeFor": "Ne cochez pas la case "Mode avancé" pour utiliser les paramètres sécurisés par défaut pour le locataire.",
     "license": "Licence",
     "listOfUserDNs": "Liste des DN (Distinguished Names) des utilisateurs qui seront Administrateurs de locataires",
     "localCluster": "Cluster local",
     "logs": "Journaux",
     "logsColon": "Journaux :",
     "logSearchImage": "Image de l'API de recherche de journaux",
     "logSearchImageExample": "Par exemple : {{image}}",
     "logSearchStorageClass": "Classe de stockage pour la recherche de journaux",
     "lookupBindDN": "Recherche d'un DN de liaison",
     "lookupBindPassword": "Recherche du mot de passe de liaison",
     "manageInterNodeCert": "Gérer automatiquement les certificats inter-nœuds",
     "management": " > Gestion",
     "manageTenant": "Gérer les locataires",
     "memoryPer": "Mémoire par noeud",
     "memoryPerNode": "Mémoire par nœud [Gi]",
     "message": "Message",
     "metrics": "Métriques",
     "minioCACertificates": "Certificats MinIO CA",
     "minioCertificates": "Certificats MinIO",
     "minioColon": "MinIO :",
     "minioImage": "Image MinIO",
     "minioImageExample": "Par exemple, {{image}}",
     "miniosImage": "L'image de MinIO",
     "minioSupportsMultiple": "MinIO supporte plusieurs configurations pour Pod Afinnity",
     "minioTLSColon": "MinIO TLS :",
     "minKeyLength": "Les clés doivent avoir une longueur minimale de 8",
     "minLabelKeyPair": "Vous devez ajouter au moins une paire de clés d'étiquette",
     "minMemorySizeErr": "La taille de la mémoire doit être supérieure à 2Gi",
     "minNumDriveErr": "Il doit y avoir au moins un lecteur",
     "minSize": "La valeur doit être supérieure ou égale à 0",
     "minVolumeSize": "La taille du volume doit être présente et supérieure à 0.",
     "minVolumeSizeErr": "La taille du volume doit être supérieure à 1Gi et inférieure à {{num}}",
     "monitoringColon": "Surveillance :",
     "mutualTLSAuth": "Authentification mutuelle TLS",
     "mutualTLSAuthOptional": "Authentification mutuelle TLS (facultatif)",
     "name": "Nom",
     "nameErr": "Le nom ne peut contenir que des lettres minuscules, des chiffres et '-'. Longueur min. Longueur minimale : 3",
     "namespace": "Espace de nommage",
     "namespaceValidationErr": "Erreur de validation si l'espace de nom a déjà des locataires",
     "nameTenant": "Nom du locataire",
     "newTenantNamePrompt": "Comment voulez-vous nommer ce nouveau locataire ?",
     "next": "Suivant",
     "no": "Non",
     "node": "Node",
     "nodeSelector": "Sélecteur de nœud",
     "none": "Aucun",
     "noPoolsFound": "Aucun pool trouvé",
     "numberOfDrivesPer": "Nombre de disques par serveur",
     "numberOfServerFailures": "Nombre de pannes de serveur à tolérer",
     "numberOfServers": "Nombre de serveurs",
     "numOfDrives": "# Nombre de disques",
     "numOfInstances": "# Nombre d'instances",
     "numOfNodes": "Nombre de noeuds",
     "numOfPools": "# Nombre de pools",
     "ok": "Ok",
     "oneTenantPerNamespaceErr": "Vous ne pouvez créer qu'un seul locataire par espace de nom",
     "openID": "OpenID",
     "openIDColon": "OpenID :",
     "organization": "Organisation",
     "overrideLogSearch": "Remplacer les valeurs par défaut de Log Search",
     "overridePrometheusdefaults": "Remplacer les valeurs par défaut de Prometheus",
     "password": "Mot de passe",
     "pingSeconds": "Ping (Secondes)",
     "pleaseEnterMinioImage": "Veuillez entrer l'image docker MinIO à utiliser.",
     "pleaseEnterMinioImg": "Veuillez entrer l'image MinIO de dockerhub à utiliser. Si elle est vide, la dernière version sera utilisée.",
     "pleaseSelectDesired": "Veuillez sélectionner la capacité désirée",
     "pleaseSelectParity": "Veuillez sélectionner la parité souhaitée. Ce paramètre modifiera la capacité maximale utilisable dans le cluster.",
     "podAffinity": "Affinité du pod",
     "podIP": "IP du pod",
     "pods": "Pods",
     "pools": "Piscines",
     "postgresImage": "Traduit avec www.DeepL.com/Translator (version gratuite)",
     "postgresImageExample": "Par exemple : {{image}}",
     "prefix": "Préfixe",
     "previewConfig": "Configuration de l'aperçu",
     "privateKey": "Clé privée",
     "privateKeyID": "ID de la clé privée",
     "projectID": "ID du projet",
     "prometheusImage": "Image Prometheus",
     "prometheusImageExample": "Par exemple : {{image}}",
     "prometheusStorageClass": "Classe de stockage Prometheus",
     "protocol": "Protocole",
     "randomizeCredentials": "Randomiser les informations d'identification",
     "rawCapacity": "Capacité brute",
     "reason": "Raison",
     "refresh": "Rafraîchir",
     "refreshList": "Rafraîchir la liste",
     "refreshTenantList": "Rafraîchir la liste des locataires",
     "region": "Région",
     "registeredCapacity": "Capacité enregistrée",
     "remoteCluster": "Remote Cluster",
     "remove": "Supprimer",
     "requester": "Demandeur",
     "resourceAllocation": "Allocation de ressources",
     "restart": "Redémarrer",
     "restarts": "Redémarre",
     "retry": "Nouvelle tentative (secondes)",
     "review": "Consulter",
     "reviewDetails": "Revoir les détails du nouveau locataire",
     "save": "Sauvegarder",
     "saveAndRestart": "Sauvegarder et redémarrer",
     "saveAndRestartConfirm": "Etes-vous sûr de vouloir sauvegarder les changements et redémarrer le service ?",
     "scopes": "Champs d'application",
     "searchTenants": "Recherche de locataires",
     "secretID": "ID secret",
     "secretKey": "Clé secrète",
     "security": "Sécurité",
     "serverInsecure": "Serveur non sécurisé",
     "servers": "Serveurs",
     "setCustomImgRegistry": "Définir un registre d'images personnalisé",
     "setUpdateImageRegistry": "Définir/mettre à jour le registre d'images",
     "simpleTable": "tableau simple",
     "skipTLSverification": "Sauter la vérification TLS",
     "sourceBucket": "Seau source",
     "startTLSconnection": "Démarrer la connexion TLS au serveur AD/LDAP",
     "state": "État",
     "stateColon": "État :",
     "status": "Statut",
     "storage": "Stockage",
     "storageClass": "Classe de stockage",
     "storageSize": "Taille du stockage [Gi]",
     "subscriptionPlan": "Plan d'abonnement",
     "summary": "Résumé",
     "tenant": "Locataire",
     "tenantDeleted": "Locataire supprimé",
     "tenantName": "Nom du locataire",
     "tenantNameErr": "Le nom du locataire n'est pas correct",
     "tenants": "Locataires",
     "tenantSize": "Taille du locataire",
     "tenantSpecification": "Spécification du locataire",
     "token": "Token",
     "totalCapacity": "Capacité totale",
     "totalNumberOfVolumes": "Nombre total de volumes",
     "totalSize": "Taille totale",
     "type": "Type",
     "unit": "Unité",
     "updateMinioVersion": "Mise à jour de la version MinIO",
     "url": "URL",
     "usableCapacity": "Capacité utilisable",
     "useCustomImage": "Utiliser une image personnalisée",
     "userDNSearchBase": "Recherche de DN utilisateur DN de base",
     "userDNSearchFilter": "Filtre de recherche de DN utilisateur",
     "username": "Nom d'utilisateur",
     "usernameFormat": "Format du nom d'utilisateur",
     "usernameSearchFilter": "Filtre de recherche de nom d'utilisateur",
     "value": "valeur",
     "vault": "Vault",
     "verified": "vérifié",
     "volumePerServer": "Volumes par serveur",
     "volumesColon": "Volumes :",
     "volumeSize": "Taille du volume (Gi)",
     "warningAllTraffic": "Avertissement : Tout le trafic avec Active Directory sera non crypté.",
     "whetherTenantService": "Si les services du locataire doivent demander une IP externe.",
     "withPodAntiAffinity": "Avec Pod Anti-Affinity",
     "writeQuorum": "Quorum d'écriture",
     "yaml": "YAML",
     "yes": "Oui"
}
